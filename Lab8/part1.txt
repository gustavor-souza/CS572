1- 
use restaurant;
show collections

2-

db.restaurants.find({}, {restaurant_id: 1, name: 1, cuisine: 1});

3-
db.restaurants.find({}, {restaurant_id: 1, name: 1, cuisine: 1, _id: 0})

4-
db.restaurants.find({}, {restaurant_id: 1, name: 1, zipcode: 1, _id: 0})

5- 

db.restaurants.find(district: 'Bronx');

6- 

db.restaurants.find(district: 'Bronx').limit(5);

7- 

db.restaurants.find(district: 'Bronx').skip(5).limit(5);

8-

db.restaurants.find({"coord": {$lt: -95.754168} })

9-

db.restaurants.find({ "coord": {$lt: -65.754168}, cuisine: {$ne: "American"}, "score": {$gt: 70} })

10-

db.restaurants.find({name: {$regex: "^Wil"}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1})

11-

db.restaurants.find({name: {$regex: "ces$"}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1})

12- 

db.restaurants.find({name: {$regex: "Reg"}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1})

13-

db.restaurants.find({district: 'Bronx', cousine:{$in: ['American', 'Chinese']}});

14- 

db.restaurants.find({district: {$in: ["State Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1})

15- 

db.restaurants.find({district: {$nin: ["State Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1})

16-

db.restaurants.find({score: {$lte: 10}}, {restaurant_id: 1, name: 1, district: 1, cuisine: 1});

17- 

db.restaurants.find({coord: { $gt: 42, $lt: 52 } }, {restaurant_id: 1, name: 1, address: 1});

18-

db.restaurants.find({}, {name: 1}).sort({name: 1});

19-

db.restaurants.find({}, {name: 1}).sort({name: -1});

20-

db.restaurants.find({}, {name: 1, cuisine: 1}).sort({name: 1, cuisine: -1});

21-

db.restaurants.find({"address.street": {$exists: 0}});

22-

db.restaurants.find({coord: {$type: "double"}});

23-

db.restaurants.find({name: {$regex: "^Wil"}}, {name: 1, district: 1, cuisine: 1, coord: 1})